/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   expander.c                                         :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: emuzun <emuzun@student.42istanbul.com.t    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/25 12:00:00 by hialpagu          #+#    #+#             */
/*   Updated: 2025/08/09 22:41:04 by emuzun           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "minishell.h"

static char	*expand_single_quote(char *str)
{
	return (ft_strdup(str));
}

static char	*expand_double_quote(char *str, char **env)
{
	return (expand_string(str, env));
}

static char	*expand_regular_word(char *str, char **env)
{
	int	i;

	i = 0;
	while (str[i])
	{
		if (str[i] == '$')
			return (expand_string(str, env));
		i++;
	}
	return (ft_strdup(str));
}

t_token	*expand_tokens(t_token *tokens, char **env)
{
	t_token	*current;
	char	*new_str;

	current = tokens;
	while (current)
	{
		if (current->type == T_WORD_SINGLE)
			new_str = expand_single_quote(current->str);
		else if (current->type == T_WORD_DOUBLE)
			new_str = expand_double_quote(current->str, env);
		else if (current->type == T_WORD)
			new_str = expand_regular_word(current->str, env);
		else
		{
			current = current->next;
			continue ;
		}
		if (!new_str)
			return (NULL);
		free(current->str);
		current->str = new_str;
		current = current->next;
	}
	return (tokens);
}/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   expander_quote.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: emuzun <emuzun@student.42istanbul.com.t    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/08/09 21:20:46 by emuzun            #+#    #+#             */
/*   Updated: 2025/08/09 22:33:04 by emuzun           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include"minishell.h"

int has_quotes(char *str)
{
    int i;

    i = 0;

    while(str[i])
    {
        if(str[i] == '\'' || str[i] == '"')
            return(1);
        i++;
    }
    return(0);
}

static void shift_string(char *str, int pos)
{
    int i;

    i = pos;
    while(str[i])
    {
        str[i] = str[i + 1];
        i++;
    }
}

void remove_quotes(char *str)
{
    int i;
    char quote;

    i = 0;
    while(str[i])
    {
        if (str[i] == '\'' || str[i] == '"')
        {
            quote = str[i];
            shift_string(str,i);
            while(str[i] && str[i] != quote)
                i++;
            if(str[i] == quote)
                shift_string(str, i);
        }
        else
            i++;
    }
}/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   expander_utils.c                                   :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: emuzun <emuzun@student.42istanbul.com.t    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/25 12:00:00 by hialpagu          #+#    #+#             */
/*   Updated: 2025/08/09 22:31:49 by emuzun           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "minishell.h"

static char	*join_and_free(char *s1, char *s2)
{
	char	*result;

	result = ft_strjoin(s1, s2);
	free(s1);
	free(s2);
	return (result);
}

static char	*expand_in_quotes(char *str, size_t *i, char **env, char quote)
{
	char	*result;
	char	*tmp;
	size_t	start;

	result = ft_strdup("");
	(*i)++;
	while (str[*i] && str[*i] != quote)
	{
		if (str[*i] == '$' && quote == '"')
		{
			tmp = handle_dollar(str, i, env);
			result = join_and_free(result, tmp);
		}
		else
		{
			start = *i;
			while (str[*i] && str[*i] != quote && 
				!(str[*i] == '$' && quote == '"'))
				(*i)++;
			tmp = ft_substr(str, start, *i - start);
			result = join_and_free(result, tmp);
		}
	}
	if (str[*i] == quote)
		(*i)++;
	return (result);
}

char	*expand_string(char *str, char **env)
{
	char	*result;
	char	*tmp;
	size_t	i;
	size_t	start;

	result = ft_strdup("");
	i = 0;
	while (str[i])
	{
		if (str[i] == '\'' || str[i] == '"')
		{
			tmp = expand_in_quotes(str, &i, env, str[i]);
			result = join_and_free(result, tmp);
		}
		else if (str[i] == '$')
		{
			tmp = handle_dollar(str, &i, env);
			result = join_and_free(result, tmp);
		}
		else
		{
			start = i;
			while (str[i] && str[i] != '$' && str[i] != '\'' 
				&& str[i] != '"')
				i++;
			tmp = ft_substr(str, start, i - start);
			result = join_and_free(result, tmp);
		}
	}
	return (result);
}/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   expander_variables.c                               :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: emuzun <emuzun@student.42istanbul.com.t    +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2025/07/25 12:00:00 by hialpagu          #+#    #+#             */
/*   Updated: 2025/08/09 22:32:44 by emuzun           ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "minishell.h"

char	*get_env_value(char *name, char **env)
{
	int		i;
	size_t	len;

	if (!name || !env)
		return (NULL);
	len = ft_strlen(name);
	i = 0;
	while (env[i])
	{
		if (ft_strncmp(env[i], name, len) == 0 && env[i][len] == '=')
			return (env[i] + len + 1);
		i++;
	}
	return (NULL);
}

static char	*get_var_name(char *str, size_t *i)
{
	size_t	start;
	size_t	len;

	start = *i;
	if (str[*i] == '?')
	{
		(*i)++;
		return (ft_strdup("?"));
	}
	while (str[*i] && (ft_isalnum(str[*i]) || str[*i] == '_'))
		(*i)++;
	len = *i - start;
	if (len == 0)
		return (NULL);
	return (ft_substr(str, start, len));
}

static char	*get_var_value(char *var_name, char **env)
{
	char	*value;

	if (ft_strcmp(var_name, "?") == 0)
		return (ft_itoa(g_exit_status));
	value = get_env_value(var_name, env);
	if (value)
		return (ft_strdup(value));
	return (ft_strdup(""));
}

char	*handle_dollar(char *str, size_t *i, char **env)
{
	char	*var_name;
	char	*var_value;

	(*i)++;
	if (!str[*i] || str[*i] == ' ' || str[*i] == '"' || str[*i] == '\'')
		return (ft_strdup("$"));
	var_name = get_var_name(str, i);
	if (!var_name)
		return (ft_strdup("$"));
	var_value = get_var_value(var_name, env);
	free(var_name);
	return (var_value);
}